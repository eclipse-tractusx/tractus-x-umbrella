{{- if (index .Values "external-secrets" "enabled") }}
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: eso-edc-consumer-secret
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "9"
    helm.sh/hook-delete-policy: before-hook-creation
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: vault-secretstore
    kind: SecretStore
  target:
    name: {{ index .Values "dataconsumerOne" "dataspace-connector-bundle" "postgresql" "auth" "existingSecret" }}
    creationPolicy: Owner
  data:
    - secretKey: postgres-password
      remoteRef:
        key: edc-consumer-db
        property: postgres-password
    - secretKey: password
      remoteRef:
        key: edc-consumer-db
        property: password
    - secretKey: replication-password
      remoteRef:
        key: edc-consumer-db
        property: replication-password
{{- end }}