{{- if and (index .Values "external-secrets" "enabled") .Values.vault.enabled }}
apiVersion: external-secrets.io/v1
kind: SecretStore
metadata:
  name: "vault-store"
  {{- with .Values.vault.secretStore.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  provider:
    vault:
      server: {{ .Values.vault.server | quote }}
      path: {{ .Values.vault.path | default "secret" | quote }}
      version: {{ .Values.vault.version | default "v2" | quote }}
      {{- if .Values.vault.namespace }}
      namespace: {{ .Values.vault.namespace | quote }}
      {{- end }}
      auth:
        {{- if eq .Values.vault.auth.method "token" }}
        tokenSecretRef:
          name: {{ .Values.vault.auth.tokenSecret.name | quote }}
          key: {{ .Values.vault.auth.tokenSecret.key | default "token" | quote }}
          {{- if .Values.vault.auth.tokenSecret.namespace }}
          namespace: {{ .Values.vault.auth.tokenSecret.namespace | quote }}
          {{- end }}
        {{- else if eq .Values.vault.auth.method "appRole" }}
        appRole:
          path: {{ .Values.vault.auth.appRole.path | default "approle" | quote }}
          roleId: {{ .Values.vault.auth.appRole.roleId | quote }}
          secretRef:
            name: {{ .Values.vault.auth.appRole.secretRef.name | quote }}
            key: {{ .Values.vault.auth.appRole.secretRef.key | default "secret-id" | quote }}
            {{- if .Values.vault.auth.appRole.secretRef.namespace }}
            namespace: {{ .Values.vault.auth.appRole.secretRef.namespace | quote }}
            {{- end }}
        {{- end }}
---
{{- if eq .Values.vault.auth.method "appRole" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.vault.auth.appRole.secretRef.name | quote }}
stringData:
  {{ .Values.vault.auth.appRole.secretRef.key | default "secret-id" | quote }}: {{ required "Mandatory property vaultAppRoleSecret not set!" (index .Values "external-secrets" "vaultAppRoleSecret") }}
{{- else if eq .Values.vault.auth.method "token" }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.vault.auth.tokenSecret.name | quote }}
stringData:
  {{ .Values.vault.auth.tokenSecret.key | default "token" | quote }}: {{ required "Mandatory property vaultToken not set!" (index .Values "external-secrets" "vaultToken") }}
{{- end }}
{{- end }}
