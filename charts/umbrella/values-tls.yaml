# #############################################################################
# Copyright (c) 2025 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
# #############################################################################

tls-issuer:
  acme:
    enabled: true
    email: "adam.smierzchalski@doubleslash.de" # needs to be defined

cert-manager:
  enabled: false
  crds:
    enabled: true
    keep: false

portal:
  portalAddress: "https://portal.stable.catena-x.net"
  portalBackendAddress: "https://portal-backend.stable.catena-x.net"
  centralidp:
    address: "https://centralidp.stable.catena-x.net"
  sharedidpAddress: "https://sharedidp.stable.catena-x.net"
  semanticsAddress: "https://semantics.stable.catena-x.net"
  bpdm:
    poolAddress: "https://business-partners.stable.catena-x.net"
    poolApiPath: "/pool/v6"
    portalGateAddress: "https://business-partners.stable.catena-x.net"
    portalGateApiPath: "/gate/v6"
  custodianAddress: "https://ssi-dim-wallet-stub.stable.catena-x.net"
  dimWrapper:
    baseAddress: "https://ssi-dim-wallet-stub.stable.catena-x.net"
    apiPath: "/api/dim"
    tokenAddress: "https://ssi-dim-wallet-stub.stable.catena-x.net/oauth/token"
  decentralIdentityManagementAuthAddress: "https://ssi-dim-wallet-stub.stable.catena-x.net/api/sts"
  sdfactoryAddress: "https://sdfactory.stable.catena-x.net"
  # -- no configuration for clearinghouse because it's an external component
  clearinghouse:
    default:
      baseAddress: "https://validation.stable.catena-x.net"
      # -- clientId and clientSecret aren't in the centralidp Keycloak
      clientId: "clearinghouse-client-id-default"
      clientSecret: ""
      tokenAddress: "https://someiam.stable.catena-x.net/realms/example/protocol/openid-connect/token"
  issuerComponentAddress: "https://ssi-credential-issuer.stable.catena-x.net"
  frontend:
    ingress:
      enabled: true
      annotations:
        # uncomment the following line for tls
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/rewrite-target: "/$1"
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-origin: "http://*.stable.catena-x.net"
      # uncomment the following lines for tls
      tls:
        # -- Provide tls secret.
        - secretName: "portal.stable.catena-x.net-tls"
          # -- Provide host for tls secret.
          hosts:
            - "portal.stable.catena-x.net"
      hosts:
        - host: "portal.stable.catena-x.net"
          paths:
            - path: "/(.*)"
              pathType: "ImplementationSpecific"
              backend:
                service: "portal"
                port: 8080
            - path: "/registration/(.*)"
              pathType: "ImplementationSpecific"
              backend:
                service: "registration"
                port: 8080
            - path: "/((assets|documentation)/.*)"
              pathType: "ImplementationSpecific"
              backend:
                service: "assets"
                port: 8080
  backend:
    processesworker:
      dim:
        baseAddress: "https://ssi-dim-wallet-stub.stable.catena-x.net"
        universalResolverAddress: "https://dev.uniresolver.io/"
    portalmigrations:
      seeding:
        seedTestData:
          useOwnConfigMap:
            companies:
              dataconsumerOne:
                connectorUrl: "https://dataconsumer-1-controlplane.stable.catena-x.net/api/v1/dsp"
              tx-data-provider:
                connectorUrl: "https://dataprovider-controlplane.stable.catena-x.net/api/v1/dsp"
              dataconsumerTwo:
                connectorUrl: "https://dataconsumer-2-controlplane.stable.catena-x.net/api/v1/dsp"
              company4:
                connectorUrl: "https://company4-controlplane.stable.catena-x.net/api/v1/dsp"
              company5:
                connectorUrl: "https://company5-controlplane.stable.catena-x.net/api/v1/dsp"
              company6:
                connectorUrl: "https://company6-controlplane.stable.catena-x.net/api/v1/dsp"
              company7:
                connectorUrl: "https://company7-controlplane.stable.catena-x.net/api/v1/dsp"
              company8:
                connectorUrl: "https://company8-controlplane.stable.catena-x.net/api/v1/dsp"
              company9:
                connectorUrl: "https://company9-controlplane.stable.catena-x.net/api/v1/dsp"
              company10:
                connectorUrl: "https://company10-controlplane.stable.catena-x.net/api/v1/dsp"
              company11:
                connectorUrl: "https://company11-controlplane.stable.catena-x.net/api/v1/dsp"
              company12:
                connectorUrl: "https://company12-controlplane.stable.catena-x.net/api/v1/dsp"
              company13:
                connectorUrl: "https://company13-controlplane.stable.catena-x.net/api/v1/dsp"
              company14:
                connectorUrl: "https://company14-controlplane.stable.catena-x.net/api/v1/dsp"
              company15:
                connectorUrl: "https://company15-controlplane.stable.catena-x.net/api/v1/dsp"
              company16:
                connectorUrl: "https://company16-controlplane.stable.catena-x.net/api/v1/dsp"
    ingress:
      annotations:
        # uncomment the following line for tls
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/proxy-body-size: "8m"
        nginx.ingress.kubernetes.io/cors-allow-origin: "http://localhost:3000, https://*.stable.catena-x.net"
      tls:
        # -- Provide tls secret.
        - secretName: "portal-backend.stable.catena-x.net-tls"
          # -- Provide host for tls secret.
          hosts:
            - "portal-backend.stable.catena-x.net"

centralidp:
  keycloak:
    ingress:
      annotations:
        # uncomment the following line for tls
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
        nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
        nginx.ingress.kubernetes.io/cors-allow-origin: "http://centralidp.stable.catena-x.net"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
        nginx.ingress.kubernetes.io/proxy-buffering: "on"
        nginx.ingress.kubernetes.io/proxy-buffers-number: "20"
        nginx.ingress.kubernetes.io/use-regex: "true"
      tls: true
      hostname: "centralidp.stable.catena-x.net"
  realmSeeding:
    sslRequired: "none"
    clients:
      registration:
        redirects:
          - https://portal.stable.catena-x.net/*
      portal:
        rootUrl: https://portal.stable.catena-x.net/home
        redirects:
          - https://portal.stable.catena-x.net/*
      semantics:
        redirects:
          - https://portal.stable.catena-x.net/*
      miw:
        clientSecret: "changeme"
        redirects:
          - https://managed-identity-wallets.stable.catena-x.net/*
      bpdm:
        clientSecret: "changeme"
        redirects:
          - https://partners-pool.stable.catena-x.net/*
      bpdmGate:
        clientSecret: "changeme"
        redirects:
          - https://partners-gate.stable.catena-x.net/*
      bpdmOrchestrator:
        clientSecret: "changeme"
    sharedidp: "https://sharedidp.stable.catena-x.net"

sharedidp:
  keycloak:
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
        nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS"
        nginx.ingress.kubernetes.io/cors-allow-origin: "http://sharedidp.stable.catena-x.net"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/proxy-buffer-size: "128k"
        nginx.ingress.kubernetes.io/proxy-buffering: "on"
        nginx.ingress.kubernetes.io/proxy-buffers-number: "20"
        nginx.ingress.kubernetes.io/use-regex: "true"
      tls: true
      hostname: "sharedidp.stable.catena-x.net"
  realmSeeding:
    realms:
      cxOperator:
        centralidp: "https://centralidp.stable.catena-x.net"

bpndiscovery:
  bpndiscovery:
    ingress:
      tls: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/rewrite-target: "/$2"
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
        nginx.ingress.kubernetes.io/x-forwarded-prefix: "/bpndiscovery"
    idp:
      issuerUri: "https://centralidp.stable.catena-x.net/auth/realms/CX-Central"
    discoveryfinderClient:
      provider:
        tokenUri: "https://centralidp.stable.catena-x.net/auth/realms/CX-Central/protocol/openid-connect/token"

discoveryfinder:
  discoveryfinder:
    properties:
      discoveryfinder:
        initialEndpoints:
          - type: bpn
            endpointAddress: https://portal-backend.stable.catena-x.net/api/administration/Connectors/discovery
            description: Service to discover connector endpoints based on bpns
            documentation: https://portal-backend.stable.catena-x.net/api/administration/swagger/index.html
    idp:
      issuerUri: "https://centralidp.stable.catena-x.net/auth/realms/CX-Central"
    # -- docs: http://semantics.stable.catena-x.net/discoveryfinder/swagger-ui/index.html
    ingress:
      tls: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/rewrite-target: "/$2"
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
        nginx.ingress.kubernetes.io/x-forwarded-prefix: "/discoveryfinder"

selfdescription:
  ingress:
    tls:
      - tlsName: sdfactory.stable.catena-x.net-tls
        hosts:
          - sdfactory.stable.catena-x.net
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"

ssi-credential-issuer:
  portalBackendAddress: "https://portal-backend.stable.catena-x.net"
  walletAddress: "https://ssi-dim-wallet-stub.stable.catena-x.net"
  walletTokenAddress: "https://ssi-dim-wallet-stub.stable.catena-x.net/oauth/token"
  service:
    credential:
      statusListUrl: "https://ssi-dim-wallet-stub.stable.catena-x.net/status-list/BPNL00000003CRHK/8a6c7486-1e1f-4555-bdd2-1a178182651e"
  centralidp:
    # -- Provide centralidp base address (CX IAM), without trailing '/auth'.
    address: "https://centralidp.stable.catena-x.net"
  ingress:
    enabled: true
    className: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/proxy-body-size: "8m"
      nginx.ingress.kubernetes.io/cors-allow-origin: "http://*.stable.catena-x.net"
    # -- Ingress TLS configuration
    tls:
      - secretName: "ssi-credential-issuer.stable.catena-x.net-tls"
        hosts:
          - ssi-credential-issuer.stable.catena-x.net

# Set up services for a business partner pool, golden record process
# and a gate with which the Portal and the users can share business partner data
bpdm:
  bpdm-gate:
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/rewrite-target: "/$2"
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/x-forwarded-prefix: "/gate"
      tls:
        - secretName: "business-partners.stable.catena-x.net-tls"
          hosts:
            - "business-partners.stable.catena-x.net"
    applicationConfig:
      bpdm:
        security:
          # App's API is authenticated over Central-IDP
          auth-server-url: "https://centralidp.stable.catena-x.net/auth"
        client:
          pool:
            base-url: https://business-partners.stable.catena-x.net/pool
          orchestrator:
            base-url: https://business-partners.stable.catena-x.net/orchestrator

  # Configures the central business partner Pool
  bpdm-pool:
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/rewrite-target: "/$2"
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/x-forwarded-prefix: "/pool"
      tls:
        - secretName: "business-partners.stable.catena-x.net-tls"
          hosts:
            - "business-partners.stable.catena-x.net"
    applicationConfig:
      bpdm:
        security:
          auth-server-url: "https://centralidp.stable.catena-x.net/auth"
        client:
          orchestrator:
            base-url: https://business-partners.stable.catena-x.net/orchestrator

  # Configures the central service for orchestrating the Golden Record Process
  bpdm-orchestrator:
    ingress:
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/rewrite-target: "/$2"
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/x-forwarded-prefix: "/orchestrator"
      tls:
        - secretName: "business-partners.stable.catena-x.net-tls"
          hosts:
            - "business-partners.stable.catena-x.net"
    applicationConfig:
      bpdm:
        security:
          auth-server-url: "https://centralidp.stable.catena-x.net/auth"

  # This installs a dummy cleaning service which performs rudimentary cleaning operations in order to realize the golden record process
  bpdm-cleaning-service-dummy:
    applicationConfig:
      bpdm:
        client:
          orchestrator:
            base-url: https://business-partners.stable.catena-x.net/orchestrator
            provider:
              issuer-uri: "https://centralidp.stable.catena-x.net/auth/realms/CX-Central"

dataconsumerOne:
  dataspace-connector-bundle:
    tractusx-connector:
      iatp:
        sts:
          dim:
            url: https://ssi-dim-wallet-stub.stable.catena-x.net/api/sts
          oauth:
            token_url: https://ssi-dim-wallet-stub.stable.catena-x.net/oauth/token
      controlplane:
        env:
          TX_IAM_IATP_CREDENTIALSERVICE_URL: https://ssi-dim-wallet-stub.stable.catena-x.net/api
        bdrs:
          server:
            url: https://ssi-dim-wallet-stub.stable.catena-x.net/api/v1/directory
        ingresses:
          - enabled: true
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
            hostname: "dataconsumer-1-controlplane.stable.catena-x.net"
            endpoints:
              - default
              - protocol
              - management
            className: "nginx"
            tls:
              enabled: true
      dataplane:
        env:
          TX_IAM_IATP_CREDENTIALSERVICE_URL: https://ssi-dim-wallet-stub.stable.catena-x.net/api
        ingresses:
          - enabled: true
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
            hostname: "dataconsumer-1-dataplane.stable.catena-x.net"
            endpoints:
              - default
              - public
            className: "nginx"
            tls:
              enabled: true
      vault:
        hashicorp:
          url: http://{{ .Release.Name }}-edc-dataconsumer-1-vault:8200

tx-data-provider:
  dataspace-connector-bundle:
    tractusx-connector:
      iatp:
        sts:
          dim:
            url: https://ssi-dim-wallet-stub.stable.catena-x.net/api/sts
          oauth:
            token_url: https://ssi-dim-wallet-stub.stable.catena-x.net/oauth/token
      controlplane:
        env:
          TX_IAM_IATP_CREDENTIALSERVICE_URL: https://ssi-dim-wallet-stub.stable.catena-x.net/api
        bdrs:
          server:
            url: https://ssi-dim-wallet-stub.stable.catena-x.net/api/v1/directory
        ingresses:
          - enabled: true
            hostname: "dataprovider-controlplane.stable.catena-x.net"
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
            endpoints:
              - default
              - protocol
              - management
            className: "nginx"
            tls:
              enabled: true
      dataplane:
        env:
          TX_IAM_IATP_CREDENTIALSERVICE_URL: https://ssi-dim-wallet-stub.stable.catena-x.net/api
        ingresses:
          - enabled: true
            hostname: "dataprovider-dataplane.stable.catena-x.net"
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
            endpoints:
              - default
              - public
            className: "nginx"
            tls:
              enabled: true

  digital-twin-bundle:
    digital-twin-registry:
      registry:
        ingress:
          annotations:
            cert-manager.io/cluster-issuer: "letsencrypt-prod"
          tls: true

  data-persistence-layer-bundle:
    simple-data-backend:
      ingress:
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-prod"
        tls:
          - hosts:
              - "dataprovider-submodelserver.stable.catena-x.net"
            secretName: "dataprovider-submodelserver.stable.catena-x.net-tls"

semantic-hub:
  hub:
    ingress:
      tls: true
      annotations:
        cert-manager.io/cluster-issuer: "letsencrypt-prod"
        nginx.ingress.kubernetes.io/rewrite-target: "/$2"
        nginx.ingress.kubernetes.io/use-regex: "true"
        nginx.ingress.kubernetes.io/enable-cors: "true"
        nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
        nginx.ingress.kubernetes.io/x-forwarded-prefix: "/hub"

dataconsumerTwo:
  dataspace-connector-bundle:
    tractusx-connector:
      iatp:
        sts:
          dim:
            url: https://ssi-dim-wallet-stub.stable.catena-x.net/api/sts
          oauth:
            token_url: https://ssi-dim-wallet-stub.stable.catena-x.net/oauth/token
      controlplane:
        env:
          TX_IAM_IATP_CREDENTIALSERVICE_URL: https://ssi-dim-wallet-stub.stable.catena-x.net/api
        bdrs:
          server:
            url: https://ssi-dim-wallet-stub.stable.catena-x.net/api/v1/directory
        ingresses:
          - enabled: true
            hostname: "dataconsumer-2-controlplane.stable.catena-x.net"
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
            endpoints:
              - default
              - protocol
              - management
            className: "nginx"
            tls:
              enabled: true
      dataplane:
        env:
          TX_IAM_IATP_CREDENTIALSERVICE_URL: https://ssi-dim-wallet-stub.stable.catena-x.net/api
        ingresses:
          - enabled: true
            hostname: "dataconsumer-2-dataplane.stable.catena-x.net"
            annotations:
              cert-manager.io/cluster-issuer: "letsencrypt-prod"
            endpoints:
              - default
              - public
            className: "nginx"
            tls:
              enabled: true

pgadmin4:
  env:
    email: pgadmin4@txtest.org
    password: tractusxpgadmin4
  persistentVolume:
    enabled: false
  ingress:
    enabled: true
    tls:
      - secretName: chart-example-tls
        hosts:
          - pgadmin4.stable.catena-x.net
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-prod"

bdrs-server-memory:
  server:
    ingresses:
      - enabled: true
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-prod"
        hostname: bdrs-server.stable.catena-x.net
        endpoints:
          - directory
          - management
        className: "nginx"
        tls:
          enabled: true

identity-and-trust-bundle:
  ssi-dim-wallet-stub:
    wallet:
      ingress:
        enabled: true
        tls:
          enabled: true
          name: "ssi-dim-wallet-stub-tls"
        urlPrefix: /
        className: nginx
        annotations:
          cert-manager.io/cluster-issuer: "letsencrypt-prod"
      stubUrl: "https://ssi-dim-wallet-stub.stable.catena-x.net"
      portal:
        host: "https://portal-backend.stable.catena-x.net"
      keycloak:
        authServerUrl: "https://centralidp.stable.catena-x.net/auth"