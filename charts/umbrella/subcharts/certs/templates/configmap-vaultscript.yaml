# #############################################################################
# Copyright (c) 2023 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
# #############################################################################
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ include "app.fullname" . }}-cert-transfer-vault-script
data:
  entrypoint.sh: |
    #!/bin/sh
    set -e

    echo "Transfering certificates to vault (${VAULT_ADDR})..."
    sleep 5


    echo "Check vault..."
    # loop trouble with BusyBox
    # for i in {1..5}; do
    for i in 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24; do
      if vault status ; then
        echo "Vault ready..."
        break
      fi
      echo "Vault not yet ready..."
      sleep 5
    done

    vault status
    if [ $? -ne 0 ]; then
      echo "Vault not ready"
      exit 1
    fi

    echo "Vault is ready"

    # TODO: check if key already exists

    echo "Transfering DAPS private certificate to vault..."
    cat << EOF | vault kv put secret/${VAULT_DAPS_PRIVATEKEY_KEY} content=-
    ${VAULT_DAPS_PRIVATEKEY_VALUE}
    EOF

    echo "Transfering DAPS public certificate to vault..."
    cat << EOF | vault kv put secret/${VAULT_DAPS_PUBLICKEY_KEY} content=-
    ${VAULT_DAPS_PUBLICKEY_VALUE}
    EOF

    echo "Transfering TRANSFER certificate chain to vault..."echo "Transfering DAPS private certificate to vault..."
    cat << EOF | vault kv put secret/${VAULT_TRANSFER_PRIVATEKEY_KEY} content=-
    ${VAULT_TRANSFER_PRIVATEKEY_VALUE}
    EOF

    echo "Transfering TRANSFER public certificate to vault..."
    cat << EOF | vault kv put secret/${VAULT_TRANSFER_PUBLICKEY_KEY} content=-
    ${VAULT_TRANSFER_PUBLICKEY_VALUE}
    EOF

    echo "Transfering encryptionAesKey to vault..."
    vault kv put secret/${VAULT_TRANSFER_ENCRYPTION_AES_KEY} content=${VAULT_TRANSFER_ENCRYPTION_AES_VALUE}
